<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


use ccxt\Exchange;

abstract class lbank extends Exchange {
    public function public_get_currencypairs($params = array()) {
        return $this->request('currencyPairs', 'public', 'GET', $params);
    }
    public function public_get_ticker($params = array()) {
        return $this->request('ticker', 'public', 'GET', $params);
    }
    public function public_get_depth($params = array()) {
        return $this->request('depth', 'public', 'GET', $params);
    }
    public function public_get_trades($params = array()) {
        return $this->request('trades', 'public', 'GET', $params);
    }
    public function public_get_kline($params = array()) {
        return $this->request('kline', 'public', 'GET', $params);
    }
    public function public_get_accuracy($params = array()) {
        return $this->request('accuracy', 'public', 'GET', $params);
    }
    public function private_post_user_info($params = array()) {
        return $this->request('user_info', 'private', 'POST', $params);
    }
    public function private_post_create_order($params = array()) {
        return $this->request('create_order', 'private', 'POST', $params);
    }
    public function private_post_cancel_order($params = array()) {
        return $this->request('cancel_order', 'private', 'POST', $params);
    }
    public function private_post_orders_info($params = array()) {
        return $this->request('orders_info', 'private', 'POST', $params);
    }
    public function private_post_orders_info_history($params = array()) {
        return $this->request('orders_info_history', 'private', 'POST', $params);
    }
    public function private_post_withdraw($params = array()) {
        return $this->request('withdraw', 'private', 'POST', $params);
    }
    public function private_post_withdrawcancel($params = array()) {
        return $this->request('withdrawCancel', 'private', 'POST', $params);
    }
    public function private_post_withdraws($params = array()) {
        return $this->request('withdraws', 'private', 'POST', $params);
    }
    public function private_post_withdrawconfigs($params = array()) {
        return $this->request('withdrawConfigs', 'private', 'POST', $params);
    }
    public function publicGetCurrencyPairs($params = array()) {
        return $this->request('currencyPairs', 'public', 'GET', $params);
    }
    public function publicGetTicker($params = array()) {
        return $this->request('ticker', 'public', 'GET', $params);
    }
    public function publicGetDepth($params = array()) {
        return $this->request('depth', 'public', 'GET', $params);
    }
    public function publicGetTrades($params = array()) {
        return $this->request('trades', 'public', 'GET', $params);
    }
    public function publicGetKline($params = array()) {
        return $this->request('kline', 'public', 'GET', $params);
    }
    public function publicGetAccuracy($params = array()) {
        return $this->request('accuracy', 'public', 'GET', $params);
    }
    public function privatePostUserInfo($params = array()) {
        return $this->request('user_info', 'private', 'POST', $params);
    }
    public function privatePostCreateOrder($params = array()) {
        return $this->request('create_order', 'private', 'POST', $params);
    }
    public function privatePostCancelOrder($params = array()) {
        return $this->request('cancel_order', 'private', 'POST', $params);
    }
    public function privatePostOrdersInfo($params = array()) {
        return $this->request('orders_info', 'private', 'POST', $params);
    }
    public function privatePostOrdersInfoHistory($params = array()) {
        return $this->request('orders_info_history', 'private', 'POST', $params);
    }
    public function privatePostWithdraw($params = array()) {
        return $this->request('withdraw', 'private', 'POST', $params);
    }
    public function privatePostWithdrawCancel($params = array()) {
        return $this->request('withdrawCancel', 'private', 'POST', $params);
    }
    public function privatePostWithdraws($params = array()) {
        return $this->request('withdraws', 'private', 'POST', $params);
    }
    public function privatePostWithdrawConfigs($params = array()) {
        return $this->request('withdrawConfigs', 'private', 'POST', $params);
    }
}