<?php  //[STAMP] fb867ba3abcf599248687bdd9c99b522
namespace _generated;

// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile

use Codeception\Module\OrderHelper;
use Codeception\Scenario;
use Codeception\Step\Action;
use Codeception\Step\Assertion;
use Codeception\Step\ConditionalAssertion;

trait OrderGuyActions
{
    /**
     * @return Scenario
     */
    abstract protected function getScenario();


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see OrderHelper::failNow
     */
    public function failNow() {
        return $this->getScenario()->runStep(new Action('failNow', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * Conditional Assertion: Test won't be stopped on fail
     * @see OrderHelper::seeFailNow
     */
    public function canSeeFailNow() {
        return $this->getScenario()->runStep(new ConditionalAssertion('seeFailNow', func_get_args()));
    }
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see OrderHelper::seeFailNow
     */
    public function seeFailNow() {
        return $this->getScenario()->runStep(new Assertion('seeFailNow', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * Conditional Assertion: Test won't be stopped on fail
     * @see OrderHelper::dontSeeFailNow
     */
    public function cantSeeFailNow() {
        return $this->getScenario()->runStep(new ConditionalAssertion('dontSeeFailNow', func_get_args()));
    }
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see OrderHelper::dontSeeFailNow
     */
    public function dontSeeFailNow() {
        return $this->getScenario()->runStep(new Assertion('dontSeeFailNow', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see OrderHelper::writeToFile
     */
    public function writeToFile($text) {
        return $this->getScenario()->runStep(new Action('writeToFile', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see OrderHelper::appendToFile
     */
    public function appendToFile($marker) {
        return $this->getScenario()->runStep(new Action('appendToFile', func_get_args()));
    }
}
