import { implicitReturnType } from '../base/types.js';
import { Exchange as _Exchange } from '../base/Exchange.js';
interface Exchange {
    publicGetCurrencies(params?: {}): Promise<implicitReturnType>;
    publicGetCurrenciesCurrencyId(params?: {}): Promise<implicitReturnType>;
    publicGetMarkets(params?: {}): Promise<implicitReturnType>;
    publicGetPairsGroups(params?: {}): Promise<implicitReturnType>;
    publicGetCurrencyPairsListCode(params?: {}): Promise<implicitReturnType>;
    publicGetCurrencyPairsGroupCurrencyPairGroupId(params?: {}): Promise<implicitReturnType>;
    publicGetCurrencyPairsCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    publicGetTicker(params?: {}): Promise<implicitReturnType>;
    publicGetTickerCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    publicGetTradesCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    publicGetOrderbookCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    publicGetChartCurrencyPairIdCandlesType(params?: {}): Promise<implicitReturnType>;
    publicGetDepositStatuses(params?: {}): Promise<implicitReturnType>;
    publicGetDepositStatusesStatusId(params?: {}): Promise<implicitReturnType>;
    publicGetWithdrawalStatuses(params?: {}): Promise<implicitReturnType>;
    publicGetWithdrawalStatusesStatusId(params?: {}): Promise<implicitReturnType>;
    publicGetPing(params?: {}): Promise<implicitReturnType>;
    publicGetMobileVersions(params?: {}): Promise<implicitReturnType>;
    publicGetTwitter(params?: {}): Promise<implicitReturnType>;
    tradingGetFeesCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    tradingGetOrders(params?: {}): Promise<implicitReturnType>;
    tradingGetOrdersCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    tradingGetOrderOrderId(params?: {}): Promise<implicitReturnType>;
    tradingPostOrdersCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    tradingPostOrdersBulkCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    tradingDeleteOrders(params?: {}): Promise<implicitReturnType>;
    tradingDeleteOrdersCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    tradingDeleteOrderOrderId(params?: {}): Promise<implicitReturnType>;
    reportsGetCurrencies(params?: {}): Promise<implicitReturnType>;
    reportsGetCurrencyPairs(params?: {}): Promise<implicitReturnType>;
    reportsGetOrders(params?: {}): Promise<implicitReturnType>;
    reportsGetOrdersOrderId(params?: {}): Promise<implicitReturnType>;
    reportsGetTradesCurrencyPairId(params?: {}): Promise<implicitReturnType>;
    reportsGetBackgroundListMode(params?: {}): Promise<implicitReturnType>;
    reportsGetBackgroundId(params?: {}): Promise<implicitReturnType>;
    reportsGetBackgroundDownloadId(params?: {}): Promise<implicitReturnType>;
    reportsPostBackgroundCreate(params?: {}): Promise<implicitReturnType>;
    reportsDeleteBackgroundId(params?: {}): Promise<implicitReturnType>;
    profileGetInfo(params?: {}): Promise<implicitReturnType>;
    profileGetWallets(params?: {}): Promise<implicitReturnType>;
    profileGetWalletsWalletId(params?: {}): Promise<implicitReturnType>;
    profileGetWalletsAddressWalletId(params?: {}): Promise<implicitReturnType>;
    profileGetDeposits(params?: {}): Promise<implicitReturnType>;
    profileGetDepositsId(params?: {}): Promise<implicitReturnType>;
    profileGetRewards(params?: {}): Promise<implicitReturnType>;
    profileGetRewardsId(params?: {}): Promise<implicitReturnType>;
    profileGetAddressbook(params?: {}): Promise<implicitReturnType>;
    profileGetAddressbookItemId(params?: {}): Promise<implicitReturnType>;
    profileGetWithdrawals(params?: {}): Promise<implicitReturnType>;
    profileGetWithdrawalsId(params?: {}): Promise<implicitReturnType>;
    profileGetNotifications(params?: {}): Promise<implicitReturnType>;
    profileGetNotificationsPrice(params?: {}): Promise<implicitReturnType>;
    profileGetFavoriteCurrencyPairs(params?: {}): Promise<implicitReturnType>;
    profileGetTokenScopes(params?: {}): Promise<implicitReturnType>;
    profilePostWalletsBurnWalletId(params?: {}): Promise<implicitReturnType>;
    profilePostWalletsWalletIdHoldAmount(params?: {}): Promise<implicitReturnType>;
    profilePostWalletsCurrencyId(params?: {}): Promise<implicitReturnType>;
    profilePostWalletsAddressWalletId(params?: {}): Promise<implicitReturnType>;
    profilePostAddressbookDisableItemItemId(params?: {}): Promise<implicitReturnType>;
    profilePostAddressbookEnableItemItemId(params?: {}): Promise<implicitReturnType>;
    profilePostAddressbookEnableStrictWd(params?: {}): Promise<implicitReturnType>;
    profilePostAddressbookDisableStrictWd(params?: {}): Promise<implicitReturnType>;
    profilePostWithdraw(params?: {}): Promise<implicitReturnType>;
    profilePostNotificationsPrice(params?: {}): Promise<implicitReturnType>;
    profilePostReferralProgram(params?: {}): Promise<implicitReturnType>;
    profilePostReferralInsertCode(params?: {}): Promise<implicitReturnType>;
    profilePostReferralBonusTransferCurrencyId(params?: {}): Promise<implicitReturnType>;
    profilePutFavoriteCurrencyPairsSet(params?: {}): Promise<implicitReturnType>;
    profileDeleteAddressbookItemId(params?: {}): Promise<implicitReturnType>;
    profileDeleteWithdrawWithdrawalId(params?: {}): Promise<implicitReturnType>;
    profileDeleteNotificationsPricePriceAlertId(params?: {}): Promise<implicitReturnType>;
    verificationGetCountries(params?: {}): Promise<implicitReturnType>;
    verificationGetStatus(params?: {}): Promise<implicitReturnType>;
    verificationGetFractalUrl(params?: {}): Promise<implicitReturnType>;
    verificationGetSmartId(params?: {}): Promise<implicitReturnType>;
    verificationGetStex(params?: {}): Promise<implicitReturnType>;
    verificationGetCryptonomicaCode(params?: {}): Promise<implicitReturnType>;
    verificationPostSmartId(params?: {}): Promise<implicitReturnType>;
    verificationPostStex(params?: {}): Promise<implicitReturnType>;
    verificationPostCryptonomica(params?: {}): Promise<implicitReturnType>;
    settingsGetNotificationsEvent(params?: {}): Promise<implicitReturnType>;
    settingsGetNotifications(params?: {}): Promise<implicitReturnType>;
    settingsPutNotifications(params?: {}): Promise<implicitReturnType>;
    settingsPutNotificationsSet(params?: {}): Promise<implicitReturnType>;
}
declare abstract class Exchange extends _Exchange {
}
export default Exchange;
