<?php  //[STAMP] 1ddd326bf5a614f528fa3b4e43e167ab
namespace _generated;

// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile

use Codeception\Module\CodeHelper;
use Codeception\Module\EmulateModuleHelper;
use Codeception\Scenario;
use Codeception\Step\Assertion;
use Codeception\Step\ConditionalAssertion;

trait CodeGuyActions
{
    /**
     * @return Scenario
     */
    abstract protected function getScenario();


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * Conditional Assertion: Test won't be stopped on fail
     * @see EmulateModuleHelper::seeEquals
     */
    public function canSeeEquals($expected, $actual) {
        return $this->getScenario()->runStep(new ConditionalAssertion('seeEquals', func_get_args()));
    }
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see EmulateModuleHelper::seeEquals
     */
    public function seeEquals($expected, $actual) {
        return $this->getScenario()->runStep(new Assertion('seeEquals', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * Conditional Assertion: Test won't be stopped on fail
     * @see EmulateModuleHelper::seeFeaturesEquals
     */
    public function canSeeFeaturesEquals($expected) {
        return $this->getScenario()->runStep(new ConditionalAssertion('seeFeaturesEquals', func_get_args()));
    }
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see EmulateModuleHelper::seeFeaturesEquals
     */
    public function seeFeaturesEquals($expected) {
        return $this->getScenario()->runStep(new Assertion('seeFeaturesEquals', func_get_args()));
    }
}
